/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EstimateGasLimitRbDataItem {
    /// Represents an optional field to add additonal data.
    #[serde(rename = "additionalData", skip_serializing_if = "Option::is_none")]
    pub additional_data: Option<String>,
    /// Represents transactions' amount.
    #[serde(rename = "amount")]
    pub amount: String,
    /// The address which receives this transaction. In UTXO-based protocols like Bitcoin there could be several senders while in account-based protocols like Ethereum there is always only one recipient.
    #[serde(rename = "recipient")]
    pub recipient: String,
    /// Represents the address which sends this transaction. In UTXO-based protocols like Bitcoin there could be several senders while in account-based protocols like Ethereum there is always only one sender.
    #[serde(rename = "sender")]
    pub sender: String,
}

impl EstimateGasLimitRbDataItem {
    pub fn new(amount: String, recipient: String, sender: String) -> EstimateGasLimitRbDataItem {
        EstimateGasLimitRbDataItem {
            additional_data: None,
            amount,
            recipient,
            sender,
        }
    }
}


