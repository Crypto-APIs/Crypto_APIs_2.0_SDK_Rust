/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetZilliqaAddressDetailsRi {
    #[serde(rename = "balance")]
    pub balance: Box<crate::models::GetZilliqaAddressDetailsRiBalance>,
    /// Defines the received transaction count to the address.
    #[serde(rename = "incomingTransactionsCount")]
    pub incoming_transactions_count: i32,
    /// Defines the sent transaction count from the address.
    #[serde(rename = "outgoingTransactionsCount")]
    pub outgoing_transactions_count: i32,
    /// Defines the entire count of the transactions.
    #[serde(rename = "transactionsCount")]
    pub transactions_count: i32,
}

impl GetZilliqaAddressDetailsRi {
    pub fn new(balance: crate::models::GetZilliqaAddressDetailsRiBalance, incoming_transactions_count: i32, outgoing_transactions_count: i32, transactions_count: i32) -> GetZilliqaAddressDetailsRi {
        GetZilliqaAddressDetailsRi {
            balance: Box::new(balance),
            incoming_transactions_count,
            outgoing_transactions_count,
            transactions_count,
        }
    }
}


