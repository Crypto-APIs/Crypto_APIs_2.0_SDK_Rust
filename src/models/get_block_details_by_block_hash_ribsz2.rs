/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 */

/// GetBlockDetailsByBlockHashRibsz2 : Zilliqa



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetBlockDetailsByBlockHashRibsz2 {
    /// Represents a mathematical value of how hard it is to find a valid hash for this block.
    #[serde(rename = "difficulty")]
    pub difficulty: String,
    /// Numeric representation of the ds block
    #[serde(rename = "dsBlock")]
    pub ds_block: i32,
    /// Numeric representation of the ds difficulty
    #[serde(rename = "dsDifficulty")]
    pub ds_difficulty: String,
    /// String representation of the ds leader
    #[serde(rename = "dsLeader")]
    pub ds_leader: String,
    /// Numeric representation of the block gas_limit
    #[serde(rename = "gasLimit")]
    pub gas_limit: i32,
    /// Numeric representation of the block gas_limit
    #[serde(rename = "gasUsed")]
    pub gas_used: i32,
    #[serde(rename = "microBlocks")]
    pub micro_blocks: Vec<String>,
}

impl GetBlockDetailsByBlockHashRibsz2 {
    /// Zilliqa
    pub fn new(difficulty: String, ds_block: i32, ds_difficulty: String, ds_leader: String, gas_limit: i32, gas_used: i32, micro_blocks: Vec<String>) -> GetBlockDetailsByBlockHashRibsz2 {
        GetBlockDetailsByBlockHashRibsz2 {
            difficulty,
            ds_block,
            ds_difficulty,
            ds_leader,
            gas_limit,
            gas_used,
            micro_blocks,
        }
    }
}


