/*
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRi {
    /// Representation of the additional data
    #[serde(rename = "additionalData", skip_serializing_if = "Option::is_none")]
    pub additional_data: Option<String>,
    /// When isConfirmed is True - Defines the amount of the transaction fee When isConfirmed is False - For ETH-based blockchains this attribute represents the max fee value.
    #[serde(rename = "fee")]
    pub fee: String,
    /// Defines the fee per byte value
    #[serde(rename = "feePerByte", skip_serializing_if = "Option::is_none")]
    pub fee_per_byte: Option<String>,
    /// Represents the time at which a particular transaction can be added to the blockchain.
    #[serde(rename = "locktime")]
    pub locktime: i64,
    /// Representation of whether the transaction is replaceable
    #[serde(rename = "replaceable")]
    pub replaceable: bool,
    /// Represents the total size of this transaction.
    #[serde(rename = "size")]
    pub size: i32,
    /// Represents the transaction inputs.
    #[serde(rename = "vin")]
    pub vin: Vec<crate::models::PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRiVin>,
    /// Represents the transaction outputs.
    #[serde(rename = "vout")]
    pub vout: Vec<crate::models::PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRiVout>,
}

impl PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRi {
    pub fn new(fee: String, locktime: i64, replaceable: bool, size: i32, vin: Vec<crate::models::PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRiVin>, vout: Vec<crate::models::PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRiVout>) -> PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRi {
        PrepareAutxoBasedTransactionFromHdWalletXPubYPubZPubRi {
            additional_data: None,
            fee,
            fee_per_byte: None,
            locktime,
            replaceable,
            size,
            vin,
            vout,
        }
    }
}


