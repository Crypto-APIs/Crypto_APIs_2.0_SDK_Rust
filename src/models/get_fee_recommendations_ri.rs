/*
 * CryptoAPIs
 *
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetFeeRecommendationsRi {
    /// Defines the unit of the fee, e.g. BTC.
    #[serde(rename = "unit")]
    pub unit: String,
    /// Fast fee per byte calculated from unconfirmed transactions
    #[serde(rename = "fast")]
    pub fast: String,
    /// Slow fee per byte calculated from unconfirmed transactions
    #[serde(rename = "slow")]
    pub slow: String,
    /// Standard fee per byte calculated from unconfirmed transactions
    #[serde(rename = "standard")]
    pub standard: String,
    /// Represents the fee cushion multiplier used to multiply the base fee.
    #[serde(rename = "feeMultiplier", skip_serializing_if = "Option::is_none")]
    pub fee_multiplier: Option<String>,
}

impl GetFeeRecommendationsRi {
    pub fn new(unit: String, fast: String, slow: String, standard: String) -> GetFeeRecommendationsRi {
        GetFeeRecommendationsRi {
            unit,
            fast,
            slow,
            standard,
            fee_multiplier: None,
        }
    }
}


